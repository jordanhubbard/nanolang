# Comparison Operators
# This example demonstrates all comparison operations

fn equals(a: int, b: int) -> bool {
    return (== a b)
}

shadow equals {
    assert (== (equals 5 5) true)
    assert (== (equals 5 10) false)
    assert (== (equals 0 0) true)
}

fn not_equals(a: int, b: int) -> bool {
    return (!= a b)
}

shadow not_equals {
    assert (== (not_equals 5 10) true)
    assert (== (not_equals 5 5) false)
    assert (== (not_equals 0 1) true)
}

fn less_than(a: int, b: int) -> bool {
    return (< a b)
}

shadow less_than {
    assert (== (less_than 5 10) true)
    assert (== (less_than 10 5) false)
    assert (== (less_than 5 5) false)
}

fn less_or_equal(a: int, b: int) -> bool {
    return (<= a b)
}

shadow less_or_equal {
    assert (== (less_or_equal 5 10) true)
    assert (== (less_or_equal 10 5) false)
    assert (== (less_or_equal 5 5) true)
}

fn greater_than(a: int, b: int) -> bool {
    return (> a b)
}

shadow greater_than {
    assert (== (greater_than 10 5) true)
    assert (== (greater_than 5 10) false)
    assert (== (greater_than 5 5) false)
}

fn greater_or_equal(a: int, b: int) -> bool {
    return (>= a b)
}

shadow greater_or_equal {
    assert (== (greater_or_equal 10 5) true)
    assert (== (greater_or_equal 5 10) false)
    assert (== (greater_or_equal 5 5) true)
}

fn max(a: int, b: int) -> int {
    if (> a b) {
        return a
    } else {
        return b
    }
}

shadow max {
    assert (== (max 10 5) 10)
    assert (== (max 5 10) 10)
    assert (== (max 7 7) 7)
}

fn min(a: int, b: int) -> int {
    if (< a b) {
        return a
    } else {
        return b
    }
}

shadow min {
    assert (== (min 10 5) 5)
    assert (== (min 5 10) 5)
    assert (== (min 7 7) 7)
}

fn abs(n: int) -> int {
    if (< n 0) {
        return (- 0 n)
    } else {
        return n
    }
}

shadow abs {
    assert (== (abs 5) 5)
    assert (== (abs (- 0 5)) 5)
    assert (== (abs 0) 0)
}

fn main() -> int {
    print (equals 10 10)
    print (not_equals 5 7)
    print (less_than 3 8)
    print (greater_than 15 10)
    print (max 20 30)
    print (min 20 30)
    print (abs (- 0 42))
    return 0
}

shadow main {
    assert (== (main) 0)
}